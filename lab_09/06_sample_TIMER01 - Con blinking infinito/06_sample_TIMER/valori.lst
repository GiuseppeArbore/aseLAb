


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             vettori_morse, DATA, READONLY
    2 00000000 00 45 01 
              54       size_1  DCB              0, 'E', 1, 'T'
    3 00000004 00 49 01 
              41 02 4E 
              03 4D    size_2  DCB              0, 'I', 1, 'A', 2, 'N', 3, 'M'
    4 0000000C 00 53 01 
              55 02 52 
              03 57 04 
              44 05 4B 
              06 47 07 
              4F       size_3  DCB              0, 'S', 1, 'U', 2, 'R', 3, 'W',
 4, 'D', 5, 'K', 6, 'G', 7, 'O'
    5 0000001C 00 48 01 
              56 02 46 
              04 4C 06 
              50 07 4A 
              08 42 09 
              58 0A 43 
              0B 59 0C 
              5A 0D 51 size_4  DCB              0, 'H', 1, 'V', 2, 'F', 4, 'L',
 6, 'P', 7, 'J', 8, 'B', 9, 'X', 10, 'C', 11, 'Y', 12, 'Z', 13, 'Q'
    6 00000034 00 35 01 
              34 03 33 
              07 32 0F 
              31 10 36 
              18 37 1C 
              38 1E 39 
              1F 30    size_5  DCB              0, '5', 1, '4', 3, '3', 7, '2',
 15, '1', 16, '6', 24, '7', 28, '8', 30, '9', 31, '0'
    7 00000048         
    8 00000048 20      spaz    DCB              ' '
    9 00000049         
   10 00000049                 AREA             fun, CODE, READONLY
   11 00000000         
   12 00000000                 export           function1
   13 00000000         
   14 00000000         function1
   15 00000000 46EC            MOV              R12, sp
   16 00000002 E92D 4DF0       STMFD            sp!,{r4-r8, r10-r11, lr}
   17 00000006         ;R0 contiene vet_input
   18 00000006         ;R1 contiene lenght
   19 00000006         ;R2 contiene output
   20 00000006         ;R3 output lenght
   21 00000006         ;sp change_symbol 2  -->r6
   22 00000006         ;sp+4 space 3    --> r5
   23 00000006         ;sp+8 sentence_end 4   -->R4
   24 00000006         ;r10 contatore
   25 00000006         ;r11 valore 
   26 00000006         
   27 00000006 F8DC 4008       LDR              R4, [r12, #8]
   28 0000000A F8DC 5004       LDR              R5, [r12, #4]
   29 0000000E F8DC 6000       LDR              R6, [r12]
   30 00000012         
   31 00000012 7807            LDRB             R7, [r0]
   32 00000014         
   33 00000014 F04F 0A00 
                       new     MOV              R10, #0
   34 00000018 F04F 0B00       MOV              R11, #0



ARM Macro Assembler    Page 2 


   35 0000001C         
   36 0000001C         
   37 0000001C 7807    loop    LDRB             R7, [r0]
   38 0000001E 42B7            CMP              R7, r6      ;VEDO SE 2
   39 00000020 D00A            BEQ              lettera
   40 00000022 42AF            CMP              R7, r5      ; VEDO SE 3
   41 00000024 D00D            BEQ              spazio
   42 00000026 DC18            BGT              fine        ; VEDO SE 4
   43 00000028         
   44 00000028 F100 0001       ADD              R0, R0, #1  ;incremento indiriz
                                                            zo
   45 0000002C F10A 0A01       ADD              R10,R10,#1  ;incremeno lunghezz
                                                            a
   46 00000030 EA4F 0B4B       LSL              R11, #1     ;shifto a sx di 1 i
                                                            l valore che ho
   47 00000034 44BB            ADD              R11, R11, R7 ;aggiungo il mio v
                                                            alore
   48 00000036 E7F1            b                loop
   49 00000038         
   50 00000038         
   51 00000038         lettera
   52 00000038 F7FF FFFE       BL               tree
   53 0000003C F100 0001       add              r0, r0, #1
   54 00000040 E7E8            b                new
   55 00000042         
   56 00000042         spazio
   57 00000042 F7FF FFFE       BL               tree
   58 00000046         
   59 00000046 4F1B            LDR              R7, =spaz
   60 00000048 783F            LDRB             R7, [r7]
   61 0000004A 7017            STRB             R7, [R2]
   62 0000004C F100 0001       ADD              R0, R0, #1
   63 00000050 F102 0201       ADD              R2, R2, #1
   64 00000054 F103 0301       ADD              R3, R3, #1
   65 00000058         
   66 00000058         
   67 00000058 E7DC            b                new
   68 0000005A         
   69 0000005A         fine
   70 0000005A F7FF FFFE       BL               tree
   71 0000005E E025            b                u
   72 00000060         
   73 00000060         tree    proc
   74 00000060 E92D 4C70       PUSH             {r4, r5, r6, R10, R11, LR}
   75 00000064 F1BA 0F01       CMP              R10, #1
   76 00000068 BF08 4C13       LDREQ            R4, =size_1
   77 0000006C F1BA 0F02       CMP              R10, #2
   78 00000070 BF08 4C12       LDREQ            R4, =size_2
   79 00000074 F1BA 0F03       CMP              R10, #3
   80 00000078 BF08 4C11       LDREQ            R4, =size_3
   81 0000007C F1BA 0F04       CMP              R10, #4
   82 00000080 BF08 4C10       LDREQ            R4, =size_4
   83 00000084 F1BA 0F05       CMP              R10, #5
   84 00000088 BF08 4C0F       LDREQ            R4, =size_5
   85 0000008C         
   86 0000008C 7825    loopP   LDRB             R5, [R4]
   87 0000008E 45AB            CMP              R11, R5
   88 00000090 D002            BEQ              trovato
   89 00000092 F104 0402       ADD              R4, R4, #2



ARM Macro Assembler    Page 3 


   90 00000096 E7F9            b                loopP
   91 00000098         
   92 00000098 F104 0401 
                       trovato add              r4, r4, #1
   93 0000009C 7826            LDRB             r6, [r4]
   94 0000009E 7016            STRB             R6, [R2]
   95 000000A0 F102 0201       ADD              R2, R2, #1
   96 000000A4 F103 0301       ADD              R3, R3, #1
   97 000000A8         
   98 000000A8 E8BD 8C70       POP              {r4, r5, r6, R10, R11, PC}
   99 000000AC                 endp
  100 000000AC         
  101 000000AC 4618    u       MOV              R0, R3
  102 000000AE E8BD 8DF0       LDMFD            sp!, {r4-r8, r10-r11, pc}
  103 000000B2         
  104 000000B2                 END
              00 00 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\valori.d -o.\valori.o -I.\RTE\_Target_1 -IC:\Users\Arbore\AppDat
a\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\Arbore\AppData\
Local\Arm\Packs\Keil\LPC1700_DFP\2.7.1\Device\Include --predefine="__EVAL SETA 
1" --predefine="__UVISION_VERSION SETA 538" --predefine="_RTE_ SETA 1" --predef
ine="LPC175x_6x SETA 1" --predefine="_RTE_ SETA 1" --list=.\valori.lst valori.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

size_1 00000000

Symbol: size_1
   Definitions
      At line 2 in file valori.s
   Uses
      At line 76 in file valori.s
Comment: size_1 used once
size_2 00000004

Symbol: size_2
   Definitions
      At line 3 in file valori.s
   Uses
      At line 78 in file valori.s
Comment: size_2 used once
size_3 0000000C

Symbol: size_3
   Definitions
      At line 4 in file valori.s
   Uses
      At line 80 in file valori.s
Comment: size_3 used once
size_4 0000001C

Symbol: size_4
   Definitions
      At line 5 in file valori.s
   Uses
      At line 82 in file valori.s
Comment: size_4 used once
size_5 00000034

Symbol: size_5
   Definitions
      At line 6 in file valori.s
   Uses
      At line 84 in file valori.s
Comment: size_5 used once
spaz 00000048

Symbol: spaz
   Definitions
      At line 8 in file valori.s
   Uses
      At line 59 in file valori.s
Comment: spaz used once
vettori_morse 00000000

Symbol: vettori_morse
   Definitions
      At line 1 in file valori.s
   Uses
      None
Comment: vettori_morse unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

fine 0000005A

Symbol: fine
   Definitions
      At line 69 in file valori.s
   Uses
      At line 42 in file valori.s
Comment: fine used once
fun 00000000

Symbol: fun
   Definitions
      At line 10 in file valori.s
   Uses
      None
Comment: fun unused
function1 00000000

Symbol: function1
   Definitions
      At line 14 in file valori.s
   Uses
      At line 12 in file valori.s
Comment: function1 used once
lettera 00000038

Symbol: lettera
   Definitions
      At line 51 in file valori.s
   Uses
      At line 39 in file valori.s
Comment: lettera used once
loop 0000001C

Symbol: loop
   Definitions
      At line 37 in file valori.s
   Uses
      At line 48 in file valori.s
Comment: loop used once
loopP 0000008C

Symbol: loopP
   Definitions
      At line 86 in file valori.s
   Uses
      At line 90 in file valori.s
Comment: loopP used once
new 00000014

Symbol: new
   Definitions
      At line 33 in file valori.s
   Uses
      At line 54 in file valori.s
      At line 67 in file valori.s

spazio 00000042




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: spazio
   Definitions
      At line 56 in file valori.s
   Uses
      At line 41 in file valori.s
Comment: spazio used once
tree 00000060

Symbol: tree
   Definitions
      At line 73 in file valori.s
   Uses
      At line 52 in file valori.s
      At line 57 in file valori.s
      At line 70 in file valori.s

trovato 00000098

Symbol: trovato
   Definitions
      At line 92 in file valori.s
   Uses
      At line 88 in file valori.s
Comment: trovato used once
u 000000AC

Symbol: u
   Definitions
      At line 101 in file valori.s
   Uses
      At line 71 in file valori.s
Comment: u used once
11 symbols
354 symbols in table
